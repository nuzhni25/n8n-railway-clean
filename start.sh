#!/bin/bash

echo "üöÄ Starting n8n with database loading script..."

# üîß –ò–°–ü–†–ê–í–õ–Ø–ï–ú RAILWAY VOLUME PERMISSIONS - –†–ê–ë–û–ß–ò–ô –ú–ï–¢–û–î!
echo "üîß Railway Volume permission fix - –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ..."

# –î–∞–∂–µ –µ—Å–ª–∏ –º—ã root, –Ω–∞–º –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ node user –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ /app
if [ "$(whoami)" = "root" ]; then
    echo "‚úÖ –ó–∞–ø—É—â–µ–Ω –∫–∞–∫ root - –º–æ–∂–µ–º –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    
    if [ -d "/app" ]; then
        echo "üìÅ Railway Volume –Ω–∞–π–¥–µ–Ω: /app"
        
        # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ú–µ–Ω—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ Railway Volume –Ω–∞ node:node
        echo "üîÑ –ò–∑–º–µ–Ω—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ /app –Ω–∞ node:node (uid:gid 1000:1000)..."
        chown -R 1000:1000 /app/
        
        # –î–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ/–∑–∞–ø–∏—Å—å/–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è node user
        echo "üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞..."
        chmod -R 755 /app/
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è SQLite —Ñ–∞–π–ª–æ–≤ - –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
        echo "üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è SQLite –æ–ø–µ—Ä–∞—Ü–∏–π..."
        find /app -name "*.sqlite*" -exec chmod 664 {} \; 2>/dev/null || true
        
        echo "‚úÖ Railway Volume –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
        echo "üìã –¢–µ–∫—É—â–∏–µ –ø—Ä–∞–≤–∞ /app:"
        ls -la /app/ | head -5
    else
        echo "‚ö†Ô∏è Railway Volume /app –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    echo "‚ö†Ô∏è –ù–ï –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ root - –Ω–µ –º–æ–∂–µ–º –º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∞ Railway Volume"
    echo "üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami) ($(id))"
fi
if [ -d "/app" ]; then
    echo "üìÅ Railway Volume found at /app"
    echo "üë§ Current user: $(whoami)"
    echo "üìã Current /app permissions:"
    ls -la /app/ | head -10
    
    # Try to change ownership of the entire volume to node user
    echo "üîÑ Attempting to fix ownership..."
    chown -R node:node /app 2>/dev/null || echo "‚ö†Ô∏è Could not change ownership (Railway restriction)"
    
    # Set proper permissions for SQLite operations
    echo "üîÑ Attempting to fix permissions..."
    chmod -R 755 /app 2>/dev/null || echo "‚ö†Ô∏è Could not change permissions (Railway restriction)"
    
    # Alternative: create a subdirectory with proper permissions
    echo "üÜï Creating writable subdirectory..."
    mkdir -p /app/writable 2>/dev/null || echo "‚ö†Ô∏è Could not create subdirectory"
    chown node:node /app/writable 2>/dev/null || echo "‚ö†Ô∏è Could not change subdirectory ownership"
    chmod 777 /app/writable 2>/dev/null || echo "‚ö†Ô∏è Could not change subdirectory permissions"
    
    echo "üìã Updated /app permissions:"
    ls -la /app/ | head -10
else
    echo "‚ùå Railway Volume /app not found"
fi

# Set environment variables
export N8N_USER_FOLDER=/home/node/.n8n
export DB_SQLITE_DATABASE=/home/node/data/database.sqlite
export N8N_ENCRYPTION_KEY="GevJ653kDGJTiemfO4SynmyQEMRwyL/X"
export DB_SQLITE_PRAGMA_journal_mode=DELETE
export DB_SQLITE_PRAGMA_synchronous=NORMAL

# Create necessary directories
echo "üìÅ Creating directories..."
mkdir -p /home/node/.n8n
mkdir -p /home/node/data

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ SQLite —Ñ–∞–π–ª–∞
check_sqlite_file() {
    local file_path="$1"
    
    if [ ! -f "$file_path" ]; then
        echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file_path"
        return 1
    fi
    
    local file_size=$(stat -c%s "$file_path" 2>/dev/null || echo "0")
    echo "üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $file_size –±–∞–π—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ 50MB –¥–ª—è –ø–æ–ª–Ω–æ–π –±–∞–∑—ã n8n)
    if [ "$file_size" -lt 52428800 ]; then
        echo "‚ö†Ô∏è  –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π (–º–µ–Ω—å—à–µ 50MB), –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SQLite –∑–∞–≥–æ–ª–æ–≤–æ–∫
    if command -v file >/dev/null 2>&1; then
        local file_type=$(file "$file_path" 2>/dev/null)
        if [[ "$file_type" == *"SQLite"* ]]; then
            echo "‚úÖ SQLite —Ñ–∞–π–ª –≤–∞–ª–∏–¥–µ–Ω"
            return 0
        else
            echo "‚ùå –§–∞–π–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è SQLite –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö"
            return 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º SQLite –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤—Ä—É—á–Ω—É—é
    local header=$(head -c 16 "$file_path" 2>/dev/null || echo "")
    if [[ "$header" == "SQLite format 3"* ]]; then
        echo "‚úÖ SQLite —Ñ–∞–π–ª –≤–∞–ª–∏–¥–µ–Ω"
        return 0
    else
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π SQLite –∑–∞–≥–æ–ª–æ–≤–æ–∫"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
download_database() {
    local url="$1"
    local output_file="$2"
    
    echo "üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑: $url"
    
    # –ú–µ—Ç–æ–¥ 1: curl
    if command -v curl >/dev/null 2>&1; then
        echo "üì• –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ curl..."
        if curl -L -f --connect-timeout 30 --max-time 300 -o "$output_file" "$url"; then
            echo "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ curl —É—Å–ø–µ—à–Ω–∞"
            return 0
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ curl"
            rm -f "$output_file"
        fi
    fi
    
    # –ú–µ—Ç–æ–¥ 2: wget
    if command -v wget >/dev/null 2>&1; then
        echo "üì• –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ wget..."
        if wget --timeout=30 --tries=3 -O "$output_file" "$url"; then
            echo "‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ wget —É—Å–ø–µ—à–Ω–∞"
            return 0
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ wget"
            rm -f "$output_file"
        fi
    fi
    
    return 1
}

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p /app/.n8n

# –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê –¥–ª—è Railway Volume
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è Railway Volume..."
# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
CURRENT_USER=$(whoami)
CURRENT_UID=$(id -u)
CURRENT_GID=$(id -g)
echo "üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $CURRENT_USER ($CURRENT_UID:$CURRENT_GID)"

# üÜï –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô
echo "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π /app..."
if [ -d "/app" ]; then
    echo "üìÇ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ /app:"
    ls -ld /app/ 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ /app"
    
    echo "üìä –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app —Å –ø—Ä–∞–≤–∞–º–∏:"
    ls -la /app/ | head -10 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ /app"
    
    echo "üß™ –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏ –≤ /app:"
    if touch /app/test_write_permission 2>/dev/null; then
        echo "‚úÖ –ó–∞–ø–∏—Å—å –≤ /app —Ä–∞–∑—Ä–µ—à–µ–Ω–∞"
        rm -f /app/test_write_permission
    else
        echo "‚ùå –ó–∞–ø–∏—Å—å –≤ /app –∑–∞–ø—Ä–µ—â–µ–Ω–∞ - —ç—Ç–æ Railway –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ!"
    fi
    
    echo "üß™ –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ /app:"
    for file in /app/*.sqlite*; do
        if [ -f "$file" ]; then
            echo "üìÑ –§–∞–π–ª: $file"
            if [ -r "$file" ]; then
                echo "  ‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è"
                file_size=$(stat -c%s "$file" 2>/dev/null || echo "unknown")
                echo "  üìä –†–∞–∑–º–µ—Ä: $file_size –±–∞–π—Ç"
            else
                echo "  ‚ùå –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á—Ç–µ–Ω–∏—è"
            fi
        fi
    done
fi

# –ò–∑–º–µ–Ω—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ /app –Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
chown -R $CURRENT_UID:$CURRENT_GID /app/ 2>/dev/null || {
    echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–µ—Ä–µ–∑ chown, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –∫–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
    if [ -f "/app/database.sqlite" ] && [ ! -w "/app/database.sqlite" ]; then
        echo "üìã –ö–æ–ø–∏—Ä—É–µ–º database.sqlite —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
        cp /app/database.sqlite /app/database_backup.sqlite
        rm -f /app/database.sqlite
        cp /app/database_backup.sqlite /app/database.sqlite
        rm -f /app/database_backup.sqlite
    fi
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –∑–∞–ø–∏—Å–∏
chmod -R 755 /app/ 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
chmod 664 /app/database.sqlite 2>/dev/null || echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–ª—è database.sqlite"

echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"

# –ù–û–í–´–ô –ü–û–î–•–û–î: –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –∏–∑ /app –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤–æ–ª—É–º–µ /app..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ /app
echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /app:"
ls -la /app/ 2>/dev/null || echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /app –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
echo "üìä –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤ –≤ /app:"
find /app -type f -exec ls -lh {} \; 2>/dev/null || echo "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã .sqlite –≤ /app
echo "üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö .sqlite —Ñ–∞–π–ª–æ–≤ –≤ /app:"
find /app -name "*.sqlite*" -exec ls -lh {} \; 2>/dev/null || echo "SQLite —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –¥–æ–º–∞—à–Ω–µ–π –ø–∞–ø–∫–µ
mkdir -p /home/node/data

# –ò—â–µ–º —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π SQLite —Ñ–∞–π–ª –≤ /app
LARGEST_DB=""
LARGEST_SIZE=0

for db_file in "/app/database.sqlite" "/app/"*.sqlite; do
    if [ -f "$db_file" ]; then
        file_size=$(stat -c%s "$db_file" 2>/dev/null || echo "0")
        echo "üìä –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª: $db_file (—Ä–∞–∑–º–µ—Ä: $file_size –±–∞–π—Ç)"
        if [ "$file_size" -gt "$LARGEST_SIZE" ]; then
            LARGEST_SIZE="$file_size"
            LARGEST_DB="$db_file"
        fi
    fi
done

# –ü–†–ò–û–†–ò–¢–ï–¢ –ê–†–•–ò–í–£: –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º ZIP –∞—Ä—Ö–∏–≤ (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤)
if [ -f "/app/database.sqlite.zip" ]; then
    echo "üì¶ –ü–†–ò–û–†–ò–¢–ï–¢: –ù–∞–π–¥–µ–Ω database.sqlite.zip ($(stat -c%s "/app/database.sqlite.zip" 2>/dev/null || echo "0") –±–∞–π—Ç)"
    echo "üìã –ò–∑–≤–ª–µ–∫–∞–µ–º –∞—Ä—Ö–∏–≤ –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è node..."
    if command -v unzip >/dev/null 2>&1; then
        if unzip -t "/app/database.sqlite.zip" >/dev/null 2>&1; then
            echo "‚úÖ ZIP —Ñ–∞–π–ª –≤–∞–ª–∏–¥–µ–Ω, –∏–∑–≤–ª–µ–∫–∞–µ–º..."
            unzip -o "/app/database.sqlite.zip" -d "/home/node/data/"
            if [ -f "/home/node/data/database.sqlite" ]; then
                chown node:node "/home/node/data/database.sqlite"
                chmod 664 "/home/node/data/database.sqlite"
                echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑–≤–ª–µ—á–µ–Ω–∞ –∏–∑ –∞—Ä—Ö–∏–≤–∞ –≤ /home/node/data/database.sqlite"
                DB_FILE="/home/node/data/database.sqlite"
            else
                echo "‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è"
            fi
        else
            echo "‚ùå ZIP —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
        fi
    else
        echo "‚ùå unzip –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
    fi
fi

# –ï—Å–ª–∏ –∞—Ä—Ö–∏–≤ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –ø—Ä—è–º–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
if [ ! -f "$DB_FILE" ] && [ -n "$LARGEST_DB" ] && [ "$LARGEST_SIZE" -gt 50000000 ]; then
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π database.sqlite: $LARGEST_DB ($(echo $LARGEST_SIZE | numfmt --to=iec 2>/dev/null || echo $LARGEST_SIZE) –±–∞–π—Ç)"
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è node..."
    
    # –ù–û–í–´–ô –ú–ï–¢–û–î: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ü–ï–†–ï–î –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
    chmod +r "$LARGEST_DB" 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ —á—Ç–µ–Ω–∏—è"
    
    # –ú–µ—Ç–æ–¥ 1: dd —Å –ª—É—á—à–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    echo "üîÑ –ú–µ—Ç–æ–¥ 1: dd —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    if dd if="$LARGEST_DB" of="/home/node/data/database.sqlite" bs=4M status=progress 2>/dev/null; then
        echo "‚úÖ dd –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå dd –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
        
        # –ú–µ—Ç–æ–¥ 2: cat —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º (–æ–±—Ö–æ–¥–∏—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)
        echo "üîÑ –ú–µ—Ç–æ–¥ 2: cat —Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º..."
        if cat "$LARGEST_DB" > "/home/node/data/database.sqlite" 2>/dev/null; then
            echo "‚úÖ cat –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
        else
            echo "‚ùå cat –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
            
            # –ú–µ—Ç–æ–¥ 3: rsync (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            if command -v rsync >/dev/null 2>&1; then
                echo "üîÑ –ú–µ—Ç–æ–¥ 3: rsync –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ..."
                if rsync -av "$LARGEST_DB" "/home/node/data/database.sqlite" 2>/dev/null; then
                    echo "‚úÖ rsync –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
                else
                    echo "‚ùå rsync –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
                fi
            fi
            
            # –ú–µ—Ç–æ–¥ 4: tar (—Å–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º)
            echo "üîÑ –ú–µ—Ç–æ–¥ 4: tar –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ..."
            if tar -cf - -C "$(dirname "$LARGEST_DB")" "$(basename "$LARGEST_DB")" | tar -xf - -C "/home/node/data/" 2>/dev/null; then
                mv "/home/node/data/$(basename "$LARGEST_DB")" "/home/node/data/database.sqlite" 2>/dev/null
                echo "‚úÖ tar –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ"
            else
                echo "‚ùå tar –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
                
                # –ú–µ—Ç–æ–¥ 5: –û–±—ã—á–Ω–æ–µ cp (–ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞)
                echo "üîÑ –ú–µ—Ç–æ–¥ 5: –æ–±—ã—á–Ω–æ–µ cp..."
                cp "$LARGEST_DB" "/home/node/data/database.sqlite" 2>/dev/null || echo "‚ùå cp –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª"
            fi
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    COPIED_SIZE=$(stat -c%s "/home/node/data/database.sqlite" 2>/dev/null || echo "0")
    echo "üìä –†–∞–∑–º–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $COPIED_SIZE –±–∞–π—Ç"
    echo "üìä –†–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: $LARGEST_SIZE –±–∞–π—Ç"
    
    if [ "$COPIED_SIZE" -gt 50000000 ]; then
        chown node:node "/home/node/data/database.sqlite"
        chmod 664 "/home/node/data/database.sqlite"
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ /home/node/data/database.sqlite"
        DB_FILE="/home/node/data/database.sqlite"
    else
        echo "‚ùå –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—É–¥–∞—á–Ω–æ, —Ä–∞–∑–º–µ—Ä —Å–ª–∏—à–∫–æ–º –º–∞–ª: $COPIED_SIZE –±–∞–π—Ç"
        echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º..."
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        echo "üìã –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É:"
        ls -la "$LARGEST_DB" 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞"
        
        echo "üìã –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –≤ /home/node/data/:"
        df -h /home/node/data/ 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Å—Ç–æ"
        
        echo "üìã –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã —Ñ–∞–π–ª–∞:"
        head -c 100 "$LARGEST_DB" 2>/dev/null | hexdump -C | head -5 || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª"
        
        rm -f "/home/node/data/database.sqlite"
    fi
fi

# –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –±–∞–∑—É –≤ –¥–æ–º–∞—à–Ω–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "$DB_FILE" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª—ã –≤ /app –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    touch "/home/node/data/database.sqlite"
    chown node:node "/home/node/data/database.sqlite"
    chmod 664 "/home/node/data/database.sqlite"
    DB_FILE="/home/node/data/database.sqlite"
fi

echo "üéØ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_FILE"
echo "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(stat -c%s "$DB_FILE" 2>/dev/null || echo "0") –±–∞–π—Ç"

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –û—Ç–∫–ª—é—á–∞–µ–º WAL —Ä–µ–∂–∏–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SQLite –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞..."
export DB_SQLITE_PRAGMA_journal_mode=DELETE
export DB_SQLITE_PRAGMA_synchronous=NORMAL

# üÜï –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –¥–ª—è Railway Volume
export DB_SQLITE_PRAGMA_temp_store=MEMORY
export DB_SQLITE_PRAGMA_mmap_size=0
echo "‚úÖ SQLite –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ journal_mode=DELETE (–≤–º–µ—Å—Ç–æ WAL)"
echo "‚úÖ –û—Ç–∫–ª—é—á–µ–Ω memory mapping –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Railway"

# –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ -f "$DB_FILE" ]; then
    echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
    sqlite3 "$DB_FILE" ".tables" 2>/dev/null || echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü"
    
    echo "üë§ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
    sqlite3 "$DB_FILE" "SELECT COUNT(*) as user_count FROM user;" 2>/dev/null || echo "‚ùå –¢–∞–±–ª–∏—Ü–∞ user –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ—Ä–∫—Ñ–ª–æ—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
    sqlite3 "$DB_FILE" "SELECT COUNT(*) as workflow_count FROM workflow_entity;" 2>/dev/null || echo "‚ùå –¢–∞–±–ª–∏—Ü–∞ workflow_entity –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    
    echo "üìã –†–∞–∑–º–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:"
    ls -lh "$DB_FILE"
fi

# –ö–†–ò–¢–ò–ß–ù–û: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è n8n
# –ë–µ–∑ —ç—Ç–æ–≥–æ –∫–ª—é—á–∞ n8n –Ω–µ –º–æ–∂–µ—Ç —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç setup —ç–∫—Ä–∞–Ω
if [ -z "$N8N_ENCRYPTION_KEY" ]; then
    echo "üîë –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è n8n..."
    export N8N_ENCRYPTION_KEY="GevJ653kDGJTiemfO4SynmyQEMRwyL/X"
    echo "‚úÖ N8N_ENCRYPTION_KEY —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ N8N_ENCRYPTION_KEY —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${N8N_ENCRYPTION_KEY:0:20}..."
fi

# üéØ –ì–õ–ê–í–ù–´–ô –ú–ï–¢–û–î: –ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –∏–∑ Railway Volume
echo "üéØ –ü–†–ò–ú–ï–ù–Ø–ï–ú –ì–õ–ê–í–ù–´–ô –ú–ï–¢–û–î - –ø—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –∏–∑ /app..."

# –ò—â–µ–º –±–æ–ª—å—à—É—é –±–∞–∑—É –≤ /app –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë –ù–ê–ü–†–Ø–ú–£–Æ (—ç—Ç–æ –¥–æ–ª–∂–Ω–æ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É!)
RAILWAY_DB_FOUND=""
for direct_db in "/app/database.sqlite" "/app/"*.sqlite; do
    if [ -f "$direct_db" ]; then
        file_size=$(stat -c%s "$direct_db" 2>/dev/null || echo "0")
        echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º: $direct_db (—Ä–∞–∑–º–µ—Ä: $file_size –±–∞–π—Ç)"
        
        if [ "$file_size" -gt 50000000 ]; then
            echo "üéØ –ù–ê–ô–î–ï–ù–ê –ë–û–õ–¨–®–ê–Ø –ë–ê–ó–ê –í RAILWAY VOLUME: $direct_db"
            echo "üìä –†–∞–∑–º–µ—Ä: $(echo $file_size | numfmt --to=iec 2>/dev/null || echo $file_size) –±–∞–π—Ç"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–ª—è —á—Ç–µ–Ω–∏—è
            if [ -r "$direct_db" ]; then
                echo "‚úÖ –ë–∞–∑–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è!"
                
                # –ö–õ–Æ–ß–ï–í–û–ï –†–ï–®–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –ù–ê–ü–†–Ø–ú–£–Æ –∏–∑ Railway Volume!
                DB_FILE="$direct_db"
                RAILWAY_DB_FOUND="YES"
                echo "üîó –ë–ê–ó–ê –ë–£–î–ï–¢ –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø –ù–ê–ü–†–Ø–ú–£–Æ: $DB_FILE"
                break
            else
                echo "‚ùå –ë–∞–∑–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è, –ø–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∞–≤–∞..."
                chmod 664 "$direct_db" 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞"
            fi
        fi
    fi
done

if [ "$RAILWAY_DB_FOUND" = "YES" ]; then
    echo "üéâ –£–°–ü–ï–•! Railway Volume –±–∞–∑–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é!"
    echo "üìç –ù–∏–∫–∞–∫–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!"
    echo "üìÇ –ü—É—Ç—å –∫ –±–∞–∑–µ: $DB_FILE"
else
    echo "‚ö†Ô∏è –ë–æ–ª—å—à–∞—è –±–∞–∑–∞ –≤ Railway Volume –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ª–æ–≥–∏–∫–µ —Å $DB_FILE"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export DB_SQLITE_DATABASE="$DB_FILE"
export N8N_USER_FOLDER="/home/node/.n8n"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è n8n –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
mkdir -p /home/node/.n8n
chown -R node:node /home/node/.n8n

echo "üöÄ –ó–∞–ø—É—Å–∫ n8n..."
echo "üìç DB_SQLITE_DATABASE=$DB_SQLITE_DATABASE"
echo "üìç N8N_USER_FOLDER=$N8N_USER_FOLDER"
echo "üìç N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:0:20}..."
echo "üìç DB_SQLITE_PRAGMA_journal_mode=$DB_SQLITE_PRAGMA_journal_mode"
echo "üìç DB_SQLITE_PRAGMA_synchronous=$DB_SQLITE_PRAGMA_synchronous"

# –ó–∞–ø—É—Å–∫–∞–µ–º n8n
exec n8n start 